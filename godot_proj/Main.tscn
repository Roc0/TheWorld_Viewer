[gd_scene load_steps=10 format=2]

[ext_resource path="res://utils/DebugStats.gd" type="Script" id=1]
[ext_resource path="res://main/TheWorld_Main.gd" type="Script" id=2]

[sub_resource type="CubeMesh" id=1]
size = Vector3( 1, 1, 1 )

[sub_resource type="SpatialMaterial" id=2]
albedo_color = Color( 0.945098, 0.0470588, 0.0470588, 1 )

[sub_resource type="PlaneMesh" id=3]
subdivide_width = 32
subdivide_depth = 32

[sub_resource type="Shader" id=4]
code = "shader_type spatial;
//render_mode unshaded;

uniform float height_scale = 0.5;

float hash(vec2 p) {
  return fract(sin(dot(p * 17.17, vec2(14.91, 67.31))) * 4791.9511);
}

float noise(vec2 x) {
  vec2 p = floor(x);
  vec2 f = fract(x);
  f = f * f * (3.0 - 2.0 * f);
  vec2 a = vec2(1.0, 0.0);
  return mix(mix(hash(p + a.yy), hash(p + a.xy), f.x),
         mix(hash(p + a.yx), hash(p + a.xx), f.x), f.y);
}

float fbm(vec2 x) {
  float height = 0.0;
  float amplitude = 0.5;
  float frequency = 3.0;
  for (int i = 0; i < 6; i++){
    height += noise(x * frequency) * amplitude;
    amplitude *= 0.5;
    frequency *= 2.0;
  }
  return height;
}

void vertex() {
	//VERTEX.y += cos(VERTEX.x * 4.0) * sin(VERTEX.z * 4.0) * 0.5;

	float height = fbm(VERTEX.xz * 2.0);
	VERTEX.y += height * height_scale;
	
	COLOR.xyz = vec3(height);
	
	vec2 e = vec2(0.01, 0.0);
	vec3 normal = normalize(vec3(fbm(VERTEX.xz - e) - fbm(VERTEX.xz + e), 2.0 * e.x, fbm(VERTEX.xz - e.yx) - fbm(VERTEX.xz + e.yx)));
	NORMAL = normal;
}
void fragment(){
  ALBEDO = COLOR.xyz;
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/height_scale = 0.5

[sub_resource type="PlaneMesh" id=6]
size = Vector2( 160, 160 )

[sub_resource type="SpatialMaterial" id=7]
albedo_color = Color( 1, 0, 0, 1 )

[node name="Main" type="Node"]

[node name="TheWorld_Main" type="Spatial" parent="."]
script = ExtResource( 2 )

[node name="Sun" type="DirectionalLight" parent="TheWorld_Main"]

[node name="DebugStats" type="MarginContainer" parent="TheWorld_Main"]
margin_right = 40.0
margin_bottom = 40.0
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Column" type="VBoxContainer" parent="TheWorld_Main/DebugStats"]
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CubeMeshTest" type="MeshInstance" parent="TheWorld_Main"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -3.9988, 0, 0 )
visible = false
mesh = SubResource( 1 )
material/0 = SubResource( 2 )

[node name="NoiseMeshTest" type="MeshInstance" parent="TheWorld_Main"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0613702, -0.00268233, 0.00385851 )
visible = false
mesh = SubResource( 3 )
material/0 = SubResource( 5 )

[node name="OmniLightTest" type="OmniLight" parent="TheWorld_Main"]
visible = false

[node name="PlaneMeshTest" type="MeshInstance" parent="TheWorld_Main"]
visible = false
mesh = SubResource( 6 )
material/0 = SubResource( 7 )
